version: '3.8'

services:

  # ---------------------------------------------------
  # Kafka broker (single‑node KRaft, Bitnami image)
  # ---------------------------------------------------
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    # expose to host as well (optional)
    ports:
      - "9092:9092"
    environment:
      # ---------- KRaft essentials ----------
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093

      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Show Java stack‑traces while we’re debugging
      - BITNAMI_DEBUG=true
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh",
              "--bootstrap-server", "kafka:9092" ]
      interval: 15s
      retries: 10

  consumer:
    image: kweather-consumer
#    build:
#      context: .
#      dockerfile: Dockerfile
    container_name: consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    command: ["python", "-m", "main"]

  producer:
    image: kweather-producer

    container_name: producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    command: [ "python", "-m", "main" ]

#  kafka-debug:
#    image: kweather-debug
#    container_name: kafka-debug
#    depends_on:
#      - kafka
#    networks:
#      - default
#    command: [ "python", "debug.py" ]

volumes:
  kafka-data:
